openapi: 3.1.0
info:
  title: Lamine Bridge (Files + Products)
  version: "1.0"
servers:
  - url: https://YOUR_PUBLIC_DOMAIN
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
security:
  - ApiKeyAuth: []
paths:
  /files/list:
    get:
      operationId: listFiles
      summary: Liste les fichiers d'un dossier (alias ou chemin absolu)
      parameters:
        - in: query
          name: folder
          required: true
          schema: { type: string }
      responses:
        "200":
          description: OK (fichiers + urls + folder absolu)
          content:
            application/json:
              schema:
                type: object
                properties:
                  folder: { type: string }
                  count:  { type: integer }
                  files:  { type: array, items: { type: string } }
                  urls:   { type: array, items: { type: string } }
  /files/raw:
    get:
      operationId: getRawFile
      summary: Sert un fichier binaire (image) depuis un dossier
      parameters:
        - in: query
          name: folder
          required: true
          schema: { type: string }
        - in: query
          name: name
          required: true
          schema: { type: string }
      responses:
        "200": { description: Image bytes }
  /products:
    get:
      operationId: listProducts
      summary: Liste les produits (1 dossier = 1 produit)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        slug: { type: string }
                        name: { type: string }
                        images_count: { type: integer }
  /products/{slug}/images:
    get:
      operationId: getProductImages
      summary: URLs publiques des images dâ€™un produit (via /files/raw)
      parameters:
        - in: path
          name: slug
          required: true
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product: { type: string }
                  slug:    { type: string }
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        name: { type: string }
                        url: { type: string }
                        preview_url: { type: string }
        "404": { description: Not found }
  /products/{slug}/descriptions:
    post:
      operationId: saveProductDescription
      summary: Enregistre la fiche produit (CSV Woo + trace JSON)
      parameters:
        - in: path
          name: slug
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                short_description: { type: string }
                description: { type: string }
                categories: { type: array, items: { type: string } }
                tags: { type: array, items: { type: string } }
                regular_price: { type: string }
                sale_price: { type: string }
                slug: { type: string }
                focus_keyword: { type: string }
                meta_title: { type: string }
                meta_description: { type: string }
                internal_link: { type: string }
      responses:
        "200": { description: OK }
        "401": { description: Unauthorized }
